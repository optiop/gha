---
name: Build and deploy NextJs site to AWS S3

# yamllint disable
on:
  workflow_call:
    inputs:
      path:
        required: false
        type: string
        default: 'src'

jobs:
  build:
    name: Build Website
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'

      - name: Setup Pages
        working-directory: ${{ inputs.path }}
        run: |
          rm next.config.mjs || true
          cat << 'EOF' > next.config.mjs
            import nextra from 'nextra'
            
            /**
            * @type {import('next').NextConfig}
            */
            const nextConfig = {
              basePath: '/${{ github.event.repository.name }}', 
              output: 'export',
              images: {
                unoptimized: true // mandatory, otherwise won't export
              }
            }
            const withNextra = nextra({
              // ... other Nextra config options
            })

            export default withNextra(nextConfig)
          EOF

      - name: Echo NextJs config
        working-directory: ${{ inputs.path }}
        run: cat next.config.mjs

      - name: Configure npm authentication
        working-directory: ${{ inputs.path }}
        run: |
          echo "@optiop:registry=https://npm.pkg.github.com/optiop" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "always-auth: true" >> .npmrc

          echo "@optiop:registry=https://npm.pkg.github.com/optiop" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
          echo "always-auth: true" >> ~/.npmrc

      - name: Install dependencies
        run: npm install
        working-directory: ${{ inputs.path }}

      - name: Search for Slidev in package.json
        id: slidev
        working-directory: ${{ inputs.path }}
        run: |
          if grep -q '"slidev"' package.json; then
            echo "Slidev found, enable variable slidev=true"
            echo "slidev=true" >> $GITHUB_OUTPUT
          else
            echo "Slidev not found"
          fi

      - name: Build the Next.js site
        run: |
          if [ "${{ steps.slidev.outputs.slidev }}" = "true" ]; then
            echo "Building Slidev presentation"
            npm run build -- --base=/${{ github.event.repository.name }}
          else
            echo "Building Next.js site"
            npm run build
          fi
        working-directory: ${{ inputs.path }}

      - name: Copy static files to out directory
        run: |
          ls -la ${{ inputs.path }}/out || true
          ls -la ${{ inputs.path }}/public || true
          ls -la ${{ inputs.path }} || true
          ls -la .
          cp -R ${{ inputs.path }}/public/* ${{ inputs.path }}/out/ || true

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v4
        with:
          name: github-pages
          path: ${{ inputs.path }}/out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
