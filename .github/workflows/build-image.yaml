---
name: Build image and push to ECR

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      context:
        required: true
        type: string
      repo:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
    timeout-minutes: 180
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AWS_REGISTRY }}

      - name: Build grafana image and push to ECR
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          push: ${{ github.event_name == 'push' &&
              github.ref == 'refs/heads/main' }}
          tags: |
            ${{ inputs.repo }}:${{ steps.vars.outputs.sha_short }}
            ${{ inputs.repo }}:latest
          secrets: |
            grafana_access_policy_token=${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN }}
          build-args: |
            BINGO=false
            GO_BUILD_TAGS=
            WIRE_TAGS=oss
            COMMIT_SHA=${{ github.sha }}
            BUILD_BRANCH=${{ github.ref }}
            BASE_IMAGE=ubuntu:22.04
            GO_IMAGE=golang:1.22.4
