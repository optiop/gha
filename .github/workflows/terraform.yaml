---
name: Provision AWS repositories

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string

jobs:
  check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

#   provision:
#     if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#     needs: check
#     strategy:
#       fail-fast: false
#     defaults:
#       run:
#         working-directory: ${{ inputs.path }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
# 
#       - name: Set AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
#           aws-region: ${{ env.AWS_REGION }}
# 
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_wrapper: false
# 
#       - name: Terraform init
#         run: terraform init -no-color
# 
#       - name: Terraform workspace select
#         run: terraform workspace select ${{ matrix.workspace }} || terraform workspace new ${{ matrix.workspace }}
# 
#       - name: Terraform validate
#         run: terraform validate -no-color
# 
#       - name: Terraform plan
#         id: plan
#         run: terraform plan -no-color -var-file=${{ matrix.var-file }}
#         continue-on-error: true
# 
#       - name: Terraform apply
#         id: apply
#         run: terraform apply -auto-approve -no-color -var-file=${{ matrix.var-file }}
#         continue-on-error: true
# 